find . -type f -name '*.sh' -execdir bacdsename -s '.sh' {} + 
find : to find any thing 
 . : search in a current file 
-type f : to find file only 

-name : 

'.sh*' : search the file begin a sh 

'*.sh' : search the file last a sh

-name : to search a files dep on a name .

-execdir : execute the command (i use the command i can remove .sh " basename '.sh' q)
------------------
ex1 ls 
find . -type f \( -name "*~" -o -name "#*#" \) -print -delete

-print -delete : to print the delete

\( -name "*~" -o -name "#*#" \) : like a condition in if statement
-------------------
ex2


Your question says "Find the number of regular files and directories", so using only -type f is not correct as it will find only regular files, not directories. You need to find both types: -type f -o -type d.

 (note that it doesn't count hidden files and assumes that file names don't contain newline characters).
 
 find . | wc -l 
 logical OR operator (-o)
 |: This is the pipe symbol. It takes the output of the find command and sends it as input to the next command.
 wc : WC Command Examples to Count Number of Lines, Words, and Characters .
 
The wc command stands for "word count."
wc -l: This command counts the number of lines (-l) in its input.

The -l option specifically instructs wc to count newline characters, which are conventionally used to delimit lines in text files.
